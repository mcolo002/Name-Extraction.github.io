<?xml version="1.0" encoding="UTF-8"?>
<pmd xmlns="http://pmd.sourceforge.net/report/2.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://pmd.sourceforge.net/report/2.0.0 http://pmd.sourceforge.net/report_2_0_0.xsd" version="6.36.0" timestamp="2022-04-21T19:33:14.407">
<file name="/home/mjrcol01/CS350/Name-Extraction/app/src/test/java/edu/odu/cs/cs350/Name_Extraction/AppTest.java">
<violation beginline="4" endline="4" begincolumn="9" endcolumn="40" rule="PackageCase" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="7" endline="7" begincolumn="1" endcolumn="49" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="7" endline="7" begincolumn="1" endcolumn="49" rule="UnusedImports" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="9" endline="14" begincolumn="1" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="10" endline="13" begincolumn="11" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" method="appHasAGreeting" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the appHasAGreeting method if you want a default access modifier
</violation>
<violation beginline="11" endline="11" begincolumn="9" endcolumn="38" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction" class="AppTest" method="appHasAGreeting" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'classUnderTest' could be declared final
</violation>
</file>
<file name="/home/mjrcol01/CS350/Name-Extraction/app/src/test/java/edu/odu/cs/cs350/Name_Extraction/IntegrationTest/LibrarianTest.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="56" rule="PackageCase" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="10" endline="10" begincolumn="1" endcolumn="19" rule="DuplicateImports" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#duplicateimports" priority="4">
Avoid duplicate imports such as 'java.util'
</violation>
<violation beginline="10" endline="10" begincolumn="1" endcolumn="19" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Duplicate import 'java.util.*'
</violation>
<violation beginline="12" endline="42" begincolumn="1" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="12" endline="42" begincolumn="1" endcolumn="1" rule="TestClassWithoutTestCases" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#testclasswithouttestcases" priority="3">
This class name ends with Test but contains no test cases
</violation>
<violation beginline="13" endline="25" begincolumn="5" endcolumn="5" rule="DefaultPackage" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="14" endline="25" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testBlock method if you want a default access modifier
</violation>
<violation beginline="14" endline="25" begincolumn="5" endcolumn="5" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="15" endline="15" begincolumn="37" endcolumn="58" rule="UseDiamondOperator" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Explicit type arguments can be replaced by Diamond Operator
</violation>
<violation beginline="15" endline="15" begincolumn="9" endcolumn="58" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'testArrayList' could be declared final
</violation>
<violation beginline="16" endline="16" begincolumn="15" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 't'.
</violation>
<violation beginline="16" endline="16" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like t
</violation>
<violation beginline="17" endline="18" begincolumn="9" endcolumn="46" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 't' (lines '17'-'18').
</violation>
<violation beginline="17" endline="17" begincolumn="31" endcolumn="47" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used (overwritten on line 18)
</violation>
<violation beginline="18" endline="19" begincolumn="9" endcolumn="49" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 't' (lines '18'-'19').
</violation>
<violation beginline="18" endline="18" begincolumn="31" endcolumn="45" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used (overwritten on line 19)
</violation>
<violation beginline="19" endline="25" begincolumn="9" endcolumn="49" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 't' (lines '19'-'25').
</violation>
<violation beginline="19" endline="19" begincolumn="31" endcolumn="48" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used
</violation>
<violation beginline="21" endline="21" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="b" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like b
</violation>
<violation beginline="21" endline="21" begincolumn="9" endcolumn="44" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'b' could be declared final
</violation>
<violation beginline="23" endline="23" begincolumn="9" endcolumn="20" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="24" endline="24" begincolumn="9" endcolumn="20" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="26" endline="32" begincolumn="5" endcolumn="5" rule="DefaultPackage" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="27" endline="32" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testToken method if you want a default access modifier
</violation>
<violation beginline="27" endline="32" begincolumn="5" endcolumn="5" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="28" endline="28" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like t
</violation>
<violation beginline="28" endline="28" begincolumn="9" endcolumn="35" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 't' could be declared final
</violation>
<violation beginline="29" endline="29" begincolumn="9" endcolumn="20" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="31" endline="31" begincolumn="9" endcolumn="20" rule="JUnitAssertionsShouldIncludeMessage" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junitassertionsshouldincludemessage" priority="3">
JUnit assertions should include a message
</violation>
<violation beginline="33" endline="36" begincolumn="5" endcolumn="5" rule="DefaultPackage" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="34" endline="36" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testWindow" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testWindow method if you want a default access modifier
</violation>
<violation beginline="37" endline="40" begincolumn="5" endcolumn="5" rule="DefaultPackage" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#defaultpackage" priority="3">
Use explicit scoping instead of the default package private level
</violation>
<violation beginline="38" endline="40" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.IntegrationTest" class="LibrarianTest" method="testFeatureSet" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testFeatureSet method if you want a default access modifier
</violation>
</file>
<file name="/home/mjrcol01/CS350/Name-Extraction/app/src/test/java/edu/odu/cs/cs350/Name_Extraction/unitTest/BlockTest.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="49" rule="PackageCase" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="2" endline="2" begincolumn="1" endcolumn="49" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="2" endline="2" begincolumn="1" endcolumn="49" rule="UnusedImports" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="6" endline="6" begincolumn="1" endcolumn="31" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'org.junit.jupiter.api.*'
</violation>
<violation beginline="6" endline="6" begincolumn="1" endcolumn="31" rule="UnusedImports" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Unused import 'org.junit.jupiter.api.*'
</violation>
<violation beginline="11" endline="28" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="11" endline="28" begincolumn="8" endcolumn="1" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="13" endline="26" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testBlock method if you want a default access modifier
</violation>
<violation beginline="14" endline="14" begincolumn="9" endcolumn="21" rule="ReplaceVectorWithList" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#replacevectorwithlist" priority="3">
Consider replacing this Vector with the newer java.util.List
</violation>
<violation beginline="14" endline="14" begincolumn="33" endcolumn="51" rule="UseDiamondOperator" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Explicit type arguments can be replaced by Diamond Operator
</violation>
<violation beginline="14" endline="14" begincolumn="9" endcolumn="51" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'testVec' could be declared final
</violation>
<violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="UnusedLocalVariable" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedlocalvariable" priority="3">
Avoid unused local variables such as 't'.
</violation>
<violation beginline="15" endline="15" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like t
</violation>
<violation beginline="16" endline="17" begincolumn="9" endcolumn="40" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 't' (lines '16'-'17').
</violation>
<violation beginline="16" endline="16" begincolumn="25" endcolumn="41" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used (overwritten on line 17)
</violation>
<violation beginline="17" endline="18" begincolumn="9" endcolumn="43" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 't' (lines '17'-'18').
</violation>
<violation beginline="17" endline="17" begincolumn="25" endcolumn="39" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used (overwritten on line 18)
</violation>
<violation beginline="18" endline="26" begincolumn="9" endcolumn="43" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DU'-anomaly for variable 't' (lines '18'-'26').
</violation>
<violation beginline="18" endline="18" begincolumn="25" endcolumn="42" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The value assigned to variable 't' is never used
</violation>
<violation beginline="20" endline="20" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="b" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like b
</violation>
<violation beginline="20" endline="20" begincolumn="9" endcolumn="44" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 'b' could be declared final
</violation>
<violation beginline="21" endline="21" begincolumn="9" endcolumn="21" rule="ReplaceVectorWithList" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#replacevectorwithlist" priority="3">
Consider replacing this Vector with the newer java.util.List
</violation>
<violation beginline="21" endline="21" begincolumn="32" endcolumn="50" rule="UseDiamondOperator" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#usediamondoperator" priority="3">
Explicit type arguments can be replaced by Diamond Operator
</violation>
<violation beginline="21" endline="22" begincolumn="9" endcolumn="30" rule="DataflowAnomalyAnalysis" ruleset="Error Prone" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" variable="tokens" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_errorprone.html#dataflowanomalyanalysis" priority="5">
Found 'DD'-anomaly for variable 'tokens' (lines '21'-'22').
</violation>
<violation beginline="21" endline="21" begincolumn="32" endcolumn="50" rule="UnusedAssignment" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedassignment" priority="3">
The initializer for variable 'tokens' is never used (overwritten on line 22)
</violation>
<violation beginline="23" endline="23" begincolumn="22" endcolumn="43" rule="LawOfDemeter" ruleset="Design" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="BlockTest" method="testBlock" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_design.html#lawofdemeter" priority="3">
Potential violation of Law of Demeter (object not created locally)
</violation>
</file>
<file name="/home/mjrcol01/CS350/Name-Extraction/app/src/test/java/edu/odu/cs/cs350/Name_Extraction/unitTest/TokenTest.java">
<violation beginline="1" endline="1" begincolumn="9" endcolumn="49" rule="PackageCase" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#packagecase" priority="3">
Package name contains upper case characters
</violation>
<violation beginline="3" endline="3" begincolumn="1" endcolumn="31" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'org.junit.jupiter.api.*'
</violation>
<violation beginline="3" endline="3" begincolumn="1" endcolumn="31" rule="UnusedImports" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Unused import 'org.junit.jupiter.api.*'
</violation>
<violation beginline="5" endline="5" begincolumn="1" endcolumn="49" rule="UnnecessaryImport" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#unnecessaryimport" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="5" endline="5" begincolumn="1" endcolumn="49" rule="UnusedImports" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#unusedimports" priority="4">
Unused import 'org.junit.jupiter.api.Assertions.*'
</violation>
<violation beginline="9" endline="18" begincolumn="8" endcolumn="1" rule="AtLeastOneConstructor" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#atleastoneconstructor" priority="3">
Each class should declare at least one constructor
</violation>
<violation beginline="9" endline="18" begincolumn="8" endcolumn="1" rule="JUnit5TestShouldBePackagePrivate" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junit5testshouldbepackageprivate" priority="3">
JUnit 5 tests should be package-private.
</violation>
<violation beginline="11" endline="16" begincolumn="5" endcolumn="5" rule="CommentDefaultAccessModifier" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#commentdefaultaccessmodifier" priority="3">
To avoid mistakes add a comment at the beginning of the testToken method if you want a default access modifier
</violation>
<violation beginline="11" endline="16" begincolumn="5" endcolumn="5" rule="JUnitTestContainsTooManyAsserts" ruleset="Best Practices" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" method="testToken" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_bestpractices.html#junittestcontainstoomanyasserts" priority="3">
Unit tests should not contain more than 1 assert(s).
</violation>
<violation beginline="12" endline="12" begincolumn="15" endcolumn="15" rule="ShortVariable" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" method="testToken" variable="t" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#shortvariable" priority="3">
Avoid variables with short names like t
</violation>
<violation beginline="12" endline="12" begincolumn="9" endcolumn="35" rule="LocalVariableCouldBeFinal" ruleset="Code Style" package="edu.odu.cs.cs350.Name_Extraction.unitTest" class="TokenTest" method="testToken" variable="VariableDeclaratorId" externalInfoUrl="https://pmd.github.io/pmd-6.36.0/pmd_rules_java_codestyle.html#localvariablecouldbefinal" priority="3">
Local variable 't' could be declared final
</violation>
</file>
<configerror rule="LoosePackageCoupling" msg="No packages or classes specified"/>
</pmd>
